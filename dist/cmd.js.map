{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","external \"path\"","/Users/planck/Dev/simple-scaffold/scaffold.ts","external \"fs\"","external \"glob\"","external \"handlebars\"","/Users/planck/Dev/simple-scaffold/cmd.ts","external \"command-line-args\"","external \"command-line-usage\""],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","fs","path","glob","handlebars","SimpleScaffold","config","this","locals","DefaultConfig","templates","output","process","cwd","createSubfolder","__assign","DefaultLocals","Name","toUpperCase","slice","toLowerCase","parseLocals","text","compile","noEscape","template","fileList","input","_i","input_1","length","checkPath","files","sync","dot","map","g","join","idx","indexOf","cleanCheckPath","_a","files_1","file","push","base","getFileContents","filePath","console","log","readFileSync","toString","getOutputPath","basePath","out","outputDir","relativeFilePath","writeFile","fileContents","baseDir","dirname","writeDirectory","info","encoding","err","run","fileConf","count","templates_1","outputPath","contents","outputContents","lstatSync","isDirectory","replace","e","error","Error","parent","existsSync","mkdirSync","default","scaffold_1","cliArgs","cliUsage","filePathParser","content","startsWith","sep","defs","alias","type","String","description","defaultOption","typeLabel","multiple","_b","split","trim","includes","defaultValue","Boolean","args","camelCase","help","header","optionList","reduce","all","cur","createSubFolder","exit"],"mappings":"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","file":"cmd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"library\"] = factory();\n\telse\n\t\troot[\"library\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"path\");","import * as fs from \"fs\"\nimport * as path from \"path\"\nimport { IScaffold } from \"./index.d\"\nimport * as glob from \"glob\"\nimport * as handlebars from \"handlebars\"\n\nclass SimpleScaffold {\n  public config: IScaffold.Config\n  public locals: IScaffold.Config[\"locals\"] = {} as any\n\n  constructor(config: IScaffold.Config) {\n    const DefaultConfig: IScaffold.Config = {\n      name: \"scaffold\",\n      templates: [],\n      output: process.cwd(),\n      createSubfolder: true,\n    }\n\n    this.config = { ...DefaultConfig, ...config }\n\n    const DefaultLocals = {\n      Name: this.config.name![0].toUpperCase() + this.config.name!.slice(1),\n      name: this.config.name![0].toLowerCase() + this.config.name!.slice(1),\n    }\n\n    this.locals = { ...DefaultLocals, ...config.locals }\n  }\n\n  private parseLocals(text: string): string {\n    const template = handlebars.compile(text, {\n      noEscape: true,\n    })\n    return template(this.locals)\n  }\n\n  private fileList(input: string[]): IScaffold.FileRepr[] {\n    const output: IScaffold.FileRepr[] = []\n    for (const checkPath of input) {\n      const files = glob\n        .sync(checkPath, { dot: true })\n        .map((g) => (g[0] == \"/\" ? g : path.join(process.cwd(), g)))\n      const idx = checkPath.indexOf(\"*\")\n      let cleanCheckPath = checkPath\n      if (idx >= 0) {\n        cleanCheckPath = checkPath.slice(0, idx - 1)\n      }\n      for (const file of files) {\n        output.push({ base: cleanCheckPath, file })\n      }\n    }\n    return output\n  }\n\n  private getFileContents(filePath: string): string {\n    console.log(fs.readFileSync(filePath))\n    return fs.readFileSync(filePath).toString()\n  }\n\n  private getOutputPath(file: string, basePath: string): string {\n    let out: string\n\n    if (typeof this.config.output === \"function\") {\n      out = this.config.output(file, basePath)\n    } else {\n      const outputDir =\n        this.config.output +\n        (this.config.createSubfolder ? `/${this.config.name}/` : \"/\")\n      const idx = file.indexOf(basePath)\n      let relativeFilePath = file\n      if (idx >= 0) {\n        relativeFilePath = file.slice(idx + basePath.length + 1)\n      }\n      out = outputDir + relativeFilePath\n    }\n\n    return this.parseLocals(out)\n  }\n\n  private writeFile(filePath: string, fileContents: string): void {\n    const baseDir = path.dirname(filePath)\n    this.writeDirectory(baseDir, filePath)\n    console.info(\"Writing file:\", filePath)\n    fs.writeFile(filePath, fileContents, { encoding: \"utf-8\" }, (err) => {\n      if (err) {\n        throw err\n      }\n    })\n  }\n\n  public run(): void {\n    console.log(`Generating scaffold: ${this.config.name}...`)\n    const templates = this.fileList(this.config.templates)\n\n    let fileConf,\n      count = 0\n\n    console.log(\"Template files:\", templates)\n    for (fileConf of templates) {\n      let outputPath, contents, outputContents, file, base\n      try {\n        count++\n        file = fileConf.file\n        base = fileConf.base\n        outputPath = this.getOutputPath(file, base)\n        if (fs.lstatSync(file).isDirectory()) {\n          this.writeDirectory(outputPath, file)\n          continue\n        }\n        contents = this.getFileContents(file)\n        outputContents = this.parseLocals(contents)\n\n        console.info(\"Writing:\", {\n          file,\n          base,\n          outputPath,\n          outputContents: outputContents.replace(\"\\n\", \"\\\\n\"),\n        })\n        this.writeFile(outputPath, outputContents)\n      } catch (e) {\n        console.error(\"Error while processing file:\", {\n          file,\n          base,\n          contents,\n          outputPath,\n          outputContents,\n        })\n        throw e\n      }\n    }\n\n    if (!count) {\n      throw new Error(\"No files to scaffold!\")\n    }\n\n    console.log(\"Done\")\n  }\n\n  private writeDirectory(outputPath: string, file: any): void {\n    const parent = path.dirname(outputPath)\n    if (!fs.existsSync(parent)) {\n      this.writeDirectory(parent, outputPath)\n    }\n    if (!fs.existsSync(outputPath)) {\n      console.info(\"Creating directory:\", {\n        file,\n        outputPath,\n      })\n      fs.mkdirSync(outputPath)\n    }\n  }\n}\n\nexport default SimpleScaffold\n","module.exports = require(\"fs\");","module.exports = require(\"glob\");","module.exports = require(\"handlebars\");","import SimpleScaffold from './scaffold'\nimport * as fs from 'fs'\nimport {IScaffold} from './index'\nimport * as cliArgs from 'command-line-args'\nimport * as cliUsage from 'command-line-usage'\nimport * as path from 'path'\n\ntype Def = cliArgs.OptionDefinition & { description?: string, typeLabel?: string }\n\nfunction localsParser(content: string) {\n  const [key, value] = content.split('=')\n  return { [key]: value }\n}\n\nfunction filePathParser(content: string) {\n  if (content.startsWith('/')) {\n    return content\n  }\n  return [process.cwd(), content].join(path.sep)\n}\n\nfunction booleanParser(text: string) {\n  return text && text.trim().length ? ['true', '1', 'on'].includes(text.trim()) : true\n}\n\nconst defs: Def[] = [\n  {\n    name: 'name',\n    alias: 'n',\n    type: String,\n    description: 'Component output name',\n    defaultOption: true,\n  },\n  {\n    name: 'templates',\n    alias: 't',\n    type: filePathParser,\n    typeLabel: '{underline File}[]',\n    description: `A glob pattern of template files to load.\\nA template file may be of any type and extension, and supports Handlebars as a parsing engine for the file names and contents, so you may customize both with variables from your configuration.`,\n    multiple: true,\n  },\n  {\n    name: 'output',\n    alias: 'o',\n    type: filePathParser,\n    typeLabel: '{underline File}',\n    description: `The output directory to put the new files in. They will attempt to maintain their regular structure as they are found, if possible.`,\n  },\n  {\n    name: 'locals',\n    alias: 'l',\n    description: `A key-value map for the template to use in parsing.`,\n    multiple: true,\n    typeLabel: '{underline Key=Value}',\n    type: localsParser,\n  },\n  {\n    name: 'create-sub-folder',\n    alias: 'S',\n    typeLabel: '{underline Boolean}',\n    description: 'Whether to create a subdirectory with \\\\{\\\\{Name\\\\}\\\\} in the {underline output} directory. {bold default=true}',\n    type: booleanParser,\n    defaultValue: true,\n  },\n  {\n    name: 'help',\n    alias: 'h',\n    type: Boolean,\n    description: 'Display this help message',\n  },\n]\n\nconst args = cliArgs(defs, { camelCase: true })\n\nconst help = [\n  { header: 'Scaffold Generator', content: `Generate scaffolds for your project based on file templates.\\nUsage: {bold simple-scaffold} {underline scaffold-name} {underline [options]}` },\n  { header: 'Options', optionList: defs }\n]\n\nargs.locals = (args.locals || []).reduce((all: object, cur: object) => ({ ...all, ...cur }), {} as IScaffold.Config['locals'])\nif (args.createSubFolder === null) {\n  args.createSubFolder = true\n}\n\nif (args.help || !args.name) {\n  console.log(cliUsage(help))\n  process.exit(0)\n}\n\nconsole.info('Config:', args)\nnew SimpleScaffold({\n  name: args.name,\n  templates: args.templates,\n  output: args.output,\n  locals: args.locals,\n  createSubfolder: args.createSubFolder,\n}).run()\n","module.exports = require(\"command-line-args\");","module.exports = require(\"command-line-usage\");"],"sourceRoot":""}