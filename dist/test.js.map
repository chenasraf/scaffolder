{"version":3,"sources":["webpack/universalModuleDefinition","/Users/planck/Dev/simple-scaffold/scaffold.ts","/Users/planck/Dev/simple-scaffold/test.ts","external \"fs\"","external \"glob\"","external \"handlebars\"","external \"path\"","webpack/bootstrap","webpack/startup"],"names":["root","factory","exports","module","define","amd","global","config","locals","DefaultConfig","name","templates","output","process","cwd","createSubfolder","this","DefaultLocals","Name","toUpperCase","slice","toLowerCase","parseLocals","text","handlebars","compile","noEscape","template","fileList","input","checkPath","files","glob","sync","dot","map","g","path","join","idx","indexOf","cleanCheckPath","file","push","base","getFileContents","filePath","console","log","fs","readFileSync","toString","getOutputPath","basePath","out","outputDir","relativeFilePath","length","writeFile","fileContents","baseDir","dirname","writeDirectory","info","encoding","err","run","fileConf","count","outputPath","contents","outputContents","lstatSync","isDirectory","replace","e","error","Error","parent","existsSync","mkdirSync","SimpleScaffold","templateDir","property","value","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAiB,QAAID,IAErBD,EAAc,QAAIC,IARpB,CASGK,QAAQ,WACX,M,uUCVA,aACA,SAEA,SACA,SAEA,aAIE,WAAYC,GAFL,KAAAC,OAAqC,GAG1C,IAAMC,EAAkC,CACtCC,KAAM,WACNC,UAAW,GACXC,OAAQC,QAAQC,MAChBC,iBAAiB,GAGnBC,KAAKT,OAAS,EAAH,KAAQE,GAAkBF,GAErC,IAAMU,EAAgB,CACpBC,KAAMF,KAAKT,OAAOG,KAAM,GAAGS,cAAgBH,KAAKT,OAAOG,KAAMU,MAAM,GACnEV,KAAMM,KAAKT,OAAOG,KAAM,GAAGW,cAAgBL,KAAKT,OAAOG,KAAMU,MAAM,IAGrEJ,KAAKR,OAAS,EAAH,KAAQS,GAAkBV,EAAOC,QA6HhD,OA1HU,YAAAc,YAAR,SAAoBC,GAIlB,OAHiBC,EAAWC,QAAQF,EAAM,CACxCG,UAAU,GAELC,CAASX,KAAKR,SAGf,YAAAoB,SAAR,SAAiBC,GAEf,IADA,IAAMjB,EAA+B,GACb,MAAAiB,EAAA,eAAO,CAA1B,IAAMC,EAAS,KACZC,EAAQC,EACXC,KAAKH,EAAW,CAAEI,KAAK,IACvBC,KAAI,SAACC,GAAM,MAAS,KAARA,EAAE,GAAYA,EAAIC,EAAKC,KAAKzB,QAAQC,MAAOsB,MACpDG,EAAMT,EAAUU,QAAQ,KAC1BC,EAAiBX,EACjBS,GAAO,IACTE,EAAiBX,EAAUV,MAAM,EAAGmB,EAAM,IAE5C,IAAmB,UAAAR,EAAA,eAAO,CAArB,IAAMW,EAAI,KACb9B,EAAO+B,KAAK,CAAEC,KAAMH,EAAgBC,KAAI,KAG5C,OAAO9B,GAGD,YAAAiC,gBAAR,SAAwBC,GAEtB,OADAC,QAAQC,IAAIC,EAAGC,aAAaJ,IACrBG,EAAGC,aAAaJ,GAAUK,YAG3B,YAAAC,cAAR,SAAsBV,EAAcW,GAClC,IAAIC,EAEJ,GAAkC,mBAAvBtC,KAAKT,OAAOK,OACrB0C,EAAMtC,KAAKT,OAAOK,OAAO8B,EAAMW,OAC1B,CACL,IAAME,EACJvC,KAAKT,OAAOK,QACXI,KAAKT,OAAOQ,gBAAkB,IAAIC,KAAKT,OAAOG,KAAI,IAAM,KACrD6B,EAAMG,EAAKF,QAAQa,GACrBG,EAAmBd,EACnBH,GAAO,IACTiB,EAAmBd,EAAKtB,MAAMmB,EAAMc,EAASI,OAAS,IAExDH,EAAMC,EAAYC,EAGpB,OAAOxC,KAAKM,YAAYgC,IAGlB,YAAAI,UAAR,SAAkBZ,EAAkBa,GAClC,IAAMC,EAAUvB,EAAKwB,QAAQf,GAC7B9B,KAAK8C,eAAeF,EAASd,GAC7BC,QAAQgB,KAAK,gBAAiBjB,GAC9BG,EAAGS,UAAUZ,EAAUa,EAAc,CAAEK,SAAU,UAAW,SAACC,GAC3D,GAAIA,EACF,MAAMA,MAKL,YAAAC,IAAP,WACEnB,QAAQC,IAAI,wBAAwBhC,KAAKT,OAAOG,KAAI,OACpD,IAEIyD,EAFExD,EAAYK,KAAKY,SAASZ,KAAKT,OAAOI,WAG1CyD,EAAQ,EAEVrB,QAAQC,IAAI,kBAAmBrC,GAC/B,IAAiB,UAAAA,EAAA,eAAW,CAAvBwD,EAAQ,KACX,IAAIE,OAAU,EAAEC,OAAQ,EAAEC,OAAc,EAAE7B,OAAI,EAAEE,OAAI,EACpD,IAKE,GAJAwB,IACA1B,EAAOyB,EAASzB,KAChBE,EAAOuB,EAASvB,KAChByB,EAAarD,KAAKoC,cAAcV,EAAME,GAClCK,EAAGuB,UAAU9B,GAAM+B,cAAe,CACpCzD,KAAK8C,eAAeO,EAAY3B,GAChC,SAEF4B,EAAWtD,KAAK6B,gBAAgBH,GAChC6B,EAAiBvD,KAAKM,YAAYgD,GAElCvB,QAAQgB,KAAK,WAAY,CACvBrB,KAAI,EACJE,KAAI,EACJyB,WAAU,EACVE,eAAgBA,EAAeG,QAAQ,KAAM,SAE/C1D,KAAK0C,UAAUW,EAAYE,GAC3B,MAAOI,GAQP,MAPA5B,QAAQ6B,MAAM,+BAAgC,CAC5ClC,KAAI,EACJE,KAAI,EACJ0B,SAAQ,EACRD,WAAU,EACVE,eAAc,IAEVI,GAIV,IAAKP,EACH,MAAM,IAAIS,MAAM,yBAGlB9B,QAAQC,IAAI,SAGN,YAAAc,eAAR,SAAuBO,EAAoB3B,GACzC,IAAMoC,EAASzC,EAAKwB,QAAQQ,GACvBpB,EAAG8B,WAAWD,IACjB9D,KAAK8C,eAAegB,EAAQT,GAEzBpB,EAAG8B,WAAWV,KACjBtB,QAAQgB,KAAK,sBAAuB,CAClCrB,KAAI,EACJ2B,WAAU,IAEZpB,EAAG+B,UAAUX,KAGnB,EAhJA,GAkJA,UAAeY,G,+DCxJf,aAGMC,EAFN,OAEyB5C,KAAKzB,QAAQC,MAAO,YAE7C,IAAI,UAAe,CACjBH,UAAW,CAACuE,EAAc,8BAC1BtE,OAAQsE,EAAc,iCACtBnE,iBAAiB,EACjBP,OAAQ,CACN2E,SAAU,SACVC,MAAO,aAERlB,MAEH,IAAI,UAAe,CACjBvD,UAAW,CAACuE,EAAc,8BAC1BtE,OAAQsE,EAAc,eACtB1E,OAAQ,CACN2E,SAAU,SACVC,MAAO,aAERlB,O,QCtBH/D,EAAOD,QAAUmF,QAAQ,O,QCAzBlF,EAAOD,QAAUmF,QAAQ,S,QCAzBlF,EAAOD,QAAUmF,QAAQ,e,QCAzBlF,EAAOD,QAAUmF,QAAQ,UCCrBC,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUtF,QAG3C,IAAIC,EAASmF,EAAyBE,GAAY,CAGjDtF,QAAS,IAOV,OAHAuF,EAAoBD,GAAUE,KAAKvF,EAAOD,QAASC,EAAQA,EAAOD,QAASqF,GAGpEpF,EAAOD,QCjBRqF,CAAoB,M","file":"test.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"library\"] = factory();\n\telse\n\t\troot[\"library\"] = factory();\n})(global, function() {\nreturn ","import * as fs from \"fs\"\nimport * as path from \"path\"\nimport { IScaffold } from \"./index.d\"\nimport * as glob from \"glob\"\nimport * as handlebars from \"handlebars\"\n\nclass SimpleScaffold {\n  public config: IScaffold.Config\n  public locals: IScaffold.Config[\"locals\"] = {} as any\n\n  constructor(config: IScaffold.Config) {\n    const DefaultConfig: IScaffold.Config = {\n      name: \"scaffold\",\n      templates: [],\n      output: process.cwd(),\n      createSubfolder: true,\n    }\n\n    this.config = { ...DefaultConfig, ...config }\n\n    const DefaultLocals = {\n      Name: this.config.name![0].toUpperCase() + this.config.name!.slice(1),\n      name: this.config.name![0].toLowerCase() + this.config.name!.slice(1),\n    }\n\n    this.locals = { ...DefaultLocals, ...config.locals }\n  }\n\n  private parseLocals(text: string): string {\n    const template = handlebars.compile(text, {\n      noEscape: true,\n    })\n    return template(this.locals)\n  }\n\n  private fileList(input: string[]): IScaffold.FileRepr[] {\n    const output: IScaffold.FileRepr[] = []\n    for (const checkPath of input) {\n      const files = glob\n        .sync(checkPath, { dot: true })\n        .map((g) => (g[0] == \"/\" ? g : path.join(process.cwd(), g)))\n      const idx = checkPath.indexOf(\"*\")\n      let cleanCheckPath = checkPath\n      if (idx >= 0) {\n        cleanCheckPath = checkPath.slice(0, idx - 1)\n      }\n      for (const file of files) {\n        output.push({ base: cleanCheckPath, file })\n      }\n    }\n    return output\n  }\n\n  private getFileContents(filePath: string): string {\n    console.log(fs.readFileSync(filePath))\n    return fs.readFileSync(filePath).toString()\n  }\n\n  private getOutputPath(file: string, basePath: string): string {\n    let out: string\n\n    if (typeof this.config.output === \"function\") {\n      out = this.config.output(file, basePath)\n    } else {\n      const outputDir =\n        this.config.output +\n        (this.config.createSubfolder ? `/${this.config.name}/` : \"/\")\n      const idx = file.indexOf(basePath)\n      let relativeFilePath = file\n      if (idx >= 0) {\n        relativeFilePath = file.slice(idx + basePath.length + 1)\n      }\n      out = outputDir + relativeFilePath\n    }\n\n    return this.parseLocals(out)\n  }\n\n  private writeFile(filePath: string, fileContents: string): void {\n    const baseDir = path.dirname(filePath)\n    this.writeDirectory(baseDir, filePath)\n    console.info(\"Writing file:\", filePath)\n    fs.writeFile(filePath, fileContents, { encoding: \"utf-8\" }, (err) => {\n      if (err) {\n        throw err\n      }\n    })\n  }\n\n  public run(): void {\n    console.log(`Generating scaffold: ${this.config.name}...`)\n    const templates = this.fileList(this.config.templates)\n\n    let fileConf,\n      count = 0\n\n    console.log(\"Template files:\", templates)\n    for (fileConf of templates) {\n      let outputPath, contents, outputContents, file, base\n      try {\n        count++\n        file = fileConf.file\n        base = fileConf.base\n        outputPath = this.getOutputPath(file, base)\n        if (fs.lstatSync(file).isDirectory()) {\n          this.writeDirectory(outputPath, file)\n          continue\n        }\n        contents = this.getFileContents(file)\n        outputContents = this.parseLocals(contents)\n\n        console.info(\"Writing:\", {\n          file,\n          base,\n          outputPath,\n          outputContents: outputContents.replace(\"\\n\", \"\\\\n\"),\n        })\n        this.writeFile(outputPath, outputContents)\n      } catch (e) {\n        console.error(\"Error while processing file:\", {\n          file,\n          base,\n          contents,\n          outputPath,\n          outputContents,\n        })\n        throw e\n      }\n    }\n\n    if (!count) {\n      throw new Error(\"No files to scaffold!\")\n    }\n\n    console.log(\"Done\")\n  }\n\n  private writeDirectory(outputPath: string, file: any): void {\n    const parent = path.dirname(outputPath)\n    if (!fs.existsSync(parent)) {\n      this.writeDirectory(parent, outputPath)\n    }\n    if (!fs.existsSync(outputPath)) {\n      console.info(\"Creating directory:\", {\n        file,\n        outputPath,\n      })\n      fs.mkdirSync(outputPath)\n    }\n  }\n}\n\nexport default SimpleScaffold\n","import SimpleScaffold from './scaffold'\nimport * as path from 'path'\n\nconst templateDir = path.join(process.cwd(), 'examples')\n\nnew SimpleScaffold({\n  templates: [templateDir + '/test-input/Component/**/*'],\n  output: templateDir + '/test-output/no-create-subpath',\n  createSubfolder: false,\n  locals: {\n    property: 'myProp',\n    value: '\"value\"'\n  }\n}).run()\n\nnew SimpleScaffold({\n  templates: [templateDir + '/test-input/Component/**/*'],\n  output: templateDir + '/test-output',\n  locals: {\n    property: 'myProp',\n    value: '\"value\"'\n  }\n}).run()\n","module.exports = require(\"fs\");;","module.exports = require(\"glob\");;","module.exports = require(\"handlebars\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(743);\n"],"sourceRoot":""}